<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0427.1803                               -->
<workbook original-version='18.1' source-build='2020.1.3 (20201.20.0427.1803)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='datasets_557629_1196183_covid_19_india' inline='true' name='federated.1p8wenp0c6f75514f32yc040j9l4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='datasets_557629_1196183_covid_19_india' name='textscan.0rdcsg11xykn3y13drajt0oy580h'>
            <connection class='textscan' directory='C:/Users/RISHIK/Documents/My Tableau Repository/Datasources' filename='datasets_557629_1196183_covid_19_india.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0rdcsg11xykn3y13drajt0oy580h' name='datasets_557629_1196183_covid_19_india.csv' table='[datasets_557629_1196183_covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[datasets_557629_1196183_covid_19_india.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[datasets_557629_1196183_covid_19_india.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[datasets_557629_1196183_covid_19_india.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[datasets_557629_1196183_covid_19_india.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[datasets_557629_1196183_covid_19_india.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[datasets_557629_1196183_covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[datasets_557629_1196183_covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[datasets_557629_1196183_covid_19_india.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[datasets_557629_1196183_covid_19_india.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[datasets_557629_1196183_covid_19_india.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]&quot;' value='No. of  Confirmed Cases' />
          <alias key='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Cured:qk]&quot;' value='No. of Cured Cases' />
          <alias key='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Deaths:qk]&quot;' value='No. of Deaths' />
        </aliases>
      </column>
      <column caption='Percent_cured' datatype='real' name='[Calculation_1109011464342769665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Cured])/SUM([Confirmed]))*100' />
      </column>
      <column caption='Percent_deaths' datatype='real' name='[Calculation_1109011464343064578]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Deaths])/sum([Confirmed]))*100' />
      </column>
      <column datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
      <column datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='string' name='[Date (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Date]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;29-05-2020&quot;'>
            <value>#2020-05-29#</value>
          </bin>
        </calculation>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Sno]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Daman &amp; Diu&quot;' />
        </semantic-values>
      </column>
      <column-instance column='[ConfirmedForeignNational]' derivation='Count' name='[cnt:ConfirmedForeignNational:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ConfirmedIndianNational]' derivation='Count' name='[cnt:ConfirmedIndianNational:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ConfirmedForeignNational]' derivation='CountD' name='[ctd:ConfirmedForeignNational:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ConfirmedIndianNational]' derivation='CountD' name='[ctd:ConfirmedIndianNational:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Min' name='[min:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sno]' derivation='Sum' name='[sum:Sno:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109011464342769665]' derivation='User' name='[usr:Calculation_1109011464342769665:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1109011464343064578]' derivation='User' name='[usr:Calculation_1109011464343064578:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Date,State/UnionTerritory)' hidden='true' name='[Action (Date,State/UnionTerritory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Date]' />
          <groupfilter function='level-members' level='[State/UnionTerritory]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Date,State/UnionTerritory)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Date:ok]' />
          <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.43361' measure-ordering='alphabetic' measure-percentage='0.56639' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='red_10_0' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Sno:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464343064578:qk]&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[cnt:ConfirmedIndianNational:qk]&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[ctd:ConfirmedIndianNational:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Cured:qk]&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4]&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[min:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#f36754'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Cured:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[cnt:ConfirmedForeignNational:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[ctd:ConfirmedForeignNational:qk]&quot;</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464342769665:qk]&quot;</bucket>
            </map>
            <map to='#feb4a6'>
              <bucket>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='State Statistics' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Covid-19 India MAP'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Daman &amp; Diu&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[Latitude (generated)]</column>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[Longitude (generated)]' field-type='quantitative' max='10984015.94574287' min='7318660.3899794798' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[Latitude (generated)]' field-type='quantitative' max='5655514.6352422247' min='102711.62791012472' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='rows' value='#333333' />
            <format attr='font-size' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' value='7' />
            <format attr='color' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' value='#666666' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='marine-label-sm-ln' value='true' />
            <format attr='enabled' id='marine-label-sm-pt' value='true' />
            <format attr='enabled' id='marine-label-md-ln' value='true' />
            <format attr='enabled' id='marine-label-md-pt' value='true' />
            <format attr='enabled' id='marine-label-lg-ln' value='true' />
            <format attr='enabled' id='marine-label-lg-pt' value='true' />
            <format attr='enabled' id='water-label' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' />
              <lod column='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' />
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' />
              <geometry column='[federated.1p8wenp0c6f75514f32yc040j9l4].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p8wenp0c6f75514f32yc040j9l4].[Latitude (generated)]</rows>
        <cols>[federated.1p8wenp0c6f75514f32yc040j9l4].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{3A99AFBD-2E00-4F5A-B671-2A08EF9F5690}' />
    </worksheet>
    <worksheet name='Death vs Cured Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='10'>Weekly Trend (Deaths vs Cured)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column caption='Percent_cured' datatype='real' name='[Calculation_1109011464342769665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Cured])/SUM([Confirmed]))*100' />
            </column>
            <column caption='Percent_deaths' datatype='real' name='[Calculation_1109011464343064578]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Deaths])/sum([Confirmed]))*100' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1109011464342769665]' derivation='User' name='[usr:Calculation_1109011464342769665:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1109011464343064578]' derivation='User' name='[usr:Calculation_1109011464343064578:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464343064578:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464343064578:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464342769665:qk]' scope='rows' value='% Cured vs Deaths' />
            <format attr='title' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' scope='rows' value='Weekly Confirmed Cases' />
            <format attr='title' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]' scope='cols' value='Week' />
            <format attr='display' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' id='annotation_4' value='none' />
            <format attr='border-width' id='annotation_4' value='0' />
            <format attr='rounding' id='annotation_4' value='medium' />
            <format attr='body-type' id='annotation_5' value='none' />
            <format attr='stroke-color' id='annotation_5' value='#666666' />
            <format attr='line-end' id='annotation_5' value='arrow' />
            <format attr='line-end-size' id='annotation_5' value='large' />
            <format attr='line-end' id='annotation_4' value='arrow' />
            <format attr='line-end-size' id='annotation_4' value='large' />
            <format attr='stroke-color' id='annotation_4' value='#666666' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>No. of Confirmed Patients:&#9;N</run>
                <run bold='true'>o. of Confirmed Cases</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Confirmed:&#9;</run>
                <run bold='true'>&lt;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e70000' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464342769665:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464343064578:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week:&#9;</run>
                <run bold='true'>&lt;[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percentage Deaths:&#9;</run>
                <run bold='true'>&lt;[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464343064578:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464342769665:qk] + ([federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464343064578:qk] + [federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]))</rows>
        <cols>[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='4' mark-position='1' pullback='1' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'>&lt;[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Percent_cured: </run>
              <run bold='true'>&lt;[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464342769665:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464342769665:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]</field>
                      <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464342769665:qk]</field>
                      <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-15 00:00:00#</value>
                    <value>11.818181818181818</value>
                    <value>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464342769665:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-53' y='-43' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Date: </run>
              <run bold='true'>&lt;[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Percent_deaths: </run>
              <run bold='true'>&lt;[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464343064578:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464343064578:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]</field>
                      <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464343064578:qk]</field>
                      <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-03-15 00:00:00#</value>
                    <value>1.8181818181818181</value>
                    <value>&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[usr:Calculation_1109011464343064578:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-58' y='40' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{7A680758-3B4D-47B7-93F0-5AF38C34F754}' />
    </worksheet>
    <worksheet name='Indian vs Foriegn nationals'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Indian vs Foriegn Nationals</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
            <column datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Daman &amp; Diu&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[ConfirmedForeignNational]' derivation='CountD' name='[ctd:ConfirmedForeignNational:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ConfirmedIndianNational]' derivation='CountD' name='[ctd:ConfirmedIndianNational:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[ctd:ConfirmedForeignNational:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[ctd:ConfirmedIndianNational:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1p8wenp0c6f75514f32yc040j9l4].[Multiple Values]</rows>
        <cols>([federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk] / [federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{5E72604F-58ED-44CB-A83D-0533BF4A0E16}' />
    </worksheet>
    <worksheet name='Line chart for states'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Daman &amp; Diu&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Cured:qk]' field-type='quantitative' max='15000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Cured:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk] + ([federated.1p8wenp0c6f75514f32yc040j9l4].[max:Cured:qk] + [federated.1p8wenp0c6f75514f32yc040j9l4].[max:Deaths:qk]))</rows>
        <cols>[federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:qk]</cols>
        <pages>
          <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{DCD1FA5C-EB43-44D1-9C07-36D9604FF299}' />
    </worksheet>
    <worksheet name='No. of Confirmed Cases line'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:qk]' included-values='all' />
          <slices>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' scope='rows' value='true' />
            <encoding attr='space' class='1' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' scope='rows' value='Daily Cases' />
            <format attr='title' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:qk]' scope='cols' value='' />
            <format attr='height' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:qk]' value='23' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' />
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' />
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-color' value='#e70000' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' />
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e70000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk] + [federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk])</rows>
        <cols>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:qk]</cols>
        <pages>
          <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{1551F19B-DD82-4EA7-92CF-2E73260F5D44}' />
    </worksheet>
    <worksheet name='State Statistics'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; : &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Daman &amp; Diu&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]'>
            <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Maharashtra&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</column>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[Multiple Values]' scope='rows' value='Cases' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1p8wenp0c6f75514f32yc040j9l4].[Multiple Values]</rows>
        <cols>([federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk] / [federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names])</cols>
        <pages>
          <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{68286767-385F-4CEF-B77C-A1141A276F0F}' />
    </worksheet>
    <worksheet name='State Stats table'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Daman &amp; Diu&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Max' name='[max:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Maharashtra&quot;</bucket>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
              <bucket>&quot;Gujarat&quot;</bucket>
              <bucket>&quot;Delhi&quot;</bucket>
              <bucket>&quot;Rajasthan&quot;</bucket>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
              <bucket>&quot;West Bengal&quot;</bucket>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
              <bucket>&quot;Cases being reassigned to states&quot;</bucket>
              <bucket>&quot;Bihar&quot;</bucket>
              <bucket>&quot;Punjab&quot;</bucket>
              <bucket>&quot;Telengana&quot;</bucket>
              <bucket>&quot;Karnataka&quot;</bucket>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
              <bucket>&quot;Odisha&quot;</bucket>
              <bucket>&quot;Haryana&quot;</bucket>
              <bucket>&quot;Kerala&quot;</bucket>
              <bucket>&quot;Assam&quot;</bucket>
              <bucket>&quot;Jharkhand&quot;</bucket>
              <bucket>&quot;Uttarakhand&quot;</bucket>
              <bucket>&quot;Chandigarh&quot;</bucket>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
              <bucket>&quot;Tripura&quot;</bucket>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
              <bucket>&quot;Goa&quot;</bucket>
              <bucket>&quot;Ladakh&quot;</bucket>
              <bucket>&quot;Unassigned&quot;</bucket>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
              <bucket>&quot;Puducherry&quot;</bucket>
              <bucket>&quot;Manipur&quot;</bucket>
              <bucket>&quot;Meghalaya&quot;</bucket>
              <bucket>&quot;Nagaland&quot;</bucket>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
              <bucket>&quot;Mizoram&quot;</bucket>
              <bucket>&quot;Dadar Nagar Haveli&quot;</bucket>
              <bucket>&quot;Sikkim&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]' value='145' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</rows>
        <cols>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{0047F119-07AD-44B9-ADAB-01905F908059}' />
    </worksheet>
    <worksheet name='Top 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 States - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Daman &amp; Diu&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[Inclusions (Date,State/UnionTerritory)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Andhra Pradesh&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-09#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-10#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-11#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-12#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-13#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-14#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-15#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-16#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-17#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-18#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-19#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-29#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Cases being reassigned to states&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-29#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Delhi&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-19#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-29#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-30#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-01#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-02#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-03#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-04#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-05#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-06#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-07#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-08#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-09#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-10#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-11#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-12#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-13#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-14#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-15#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-16#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-17#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-18#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-19#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-29#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Gujarat&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-29#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-30#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-01#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-02#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-03#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-04#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-05#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-06#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-07#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-08#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-09#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-10#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-11#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-12#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-13#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-14#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-15#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-16#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-17#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-18#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-19#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-29#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Madhya Pradesh&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-29#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-30#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-01#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-02#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-03#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-04#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-05#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-06#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-07#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-08#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-09#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-10#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-11#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-12#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-13#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-14#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-15#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-16#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-17#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-18#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-19#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-29#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Maharashtra&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-13#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-14#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-15#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-16#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-17#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-18#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-19#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-29#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-30#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-01#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-02#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-03#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-04#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-05#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-06#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-07#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-08#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-09#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-10#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-11#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-12#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-13#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-14#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-15#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-16#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-17#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-18#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-19#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-29#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Rajasthan&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-29#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-30#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-01#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-02#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-03#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-04#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-05#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-06#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-07#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-08#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-09#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-10#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-11#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-12#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-13#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-14#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-15#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-16#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-17#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-18#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-19#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-29#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Tamil Nadu&quot;' />
                    <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;Uttar Pradesh&quot;' />
                  </groupfilter>
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-29#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-04-30#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-01#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-02#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-03#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-04#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-05#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-06#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-07#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-08#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-09#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-10#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-11#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-12#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-13#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-14#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-15#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-16#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-17#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-18#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-19#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-29#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State/UnionTerritory:nk]' member='&quot;West Bengal&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-11#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-12#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-13#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-14#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-15#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-16#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-17#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-18#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-19#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-20#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-21#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-22#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-23#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-24#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-25#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-26#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-27#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-28#' />
                    <groupfilter function='member' level='[none:Date:ok]' member='#2020-05-29#' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:Date:ok]' />
                <hierarchy name='[none:State/UnionTerritory:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]'>
            <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</column>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[Inclusions (Date,State/UnionTerritory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' scope='cols' value='' />
            <format attr='height' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' value='29' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' value='33' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</rows>
        <cols>[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]</cols>
        <pages>
          <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{4C14B462-7CB9-4203-B052-3FD9E7AF070D}' />
    </worksheet>
    <worksheet name='Total Confirmed Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='419' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='12'>Total Confirmed Cases</run>
                <run>Æ&#10;</run>
                <run fontcolor='#e70000' fontsize='18'>&lt;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{01655F36-EE0A-4DA7-AA2B-04DB3B5E67B5}' />
    </worksheet>
    <worksheet name='Total No. of Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='433' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Deaths:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='12'>Total Deaths</run>
                <run>Æ&#10;</run>
                <run fontcolor='#e70000' fontsize='18'>&lt;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Deaths:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{73EEC947-E0B2-4CD8-9561-274D23E0B6F0}' />
    </worksheet>
    <worksheet name='Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</column>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1p8wenp0c6f75514f32yc040j9l4].[Multiple Values]</rows>
        <cols>([federated.1p8wenp0c6f75514f32yc040j9l4].[twk:Date:ok] / [federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{C0FB4399-A7F0-4ADE-9729-3F8197F14CB9}' />
    </worksheet>
    <worksheet name='log trend for confirmed cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:qk]' included-values='all' />
          <slices>
            <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' scope='rows' value='true' />
            <encoding attr='space' class='1' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' scope='rows' value='Daily Cases' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' />
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' />
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-color' value='#e70000' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' />
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e70000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk] + [federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk])</rows>
        <cols>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:qk]</cols>
        <pages>
          <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
      <simple-id uuid='{26146924-E15D-41CA-A470-F45D37613F62}' />
    </worksheet>
    <worksheet name='sorted confirmed bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Daman &amp; Diu&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Max' name='[max:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]</rows>
        <cols>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</cols>
        <pages>
          <column>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{55320A86-67BA-4802-8B53-78737C61A93F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='730' maxwidth='1366' minheight='730' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='datasets_557629_1196183_covid_19_india' name='federated.1p8wenp0c6f75514f32yc040j9l4' />
      </datasources>
      <datasource-dependencies datasource='federated.1p8wenp0c6f75514f32yc040j9l4'>
        <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Daman &amp; Diu&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='97916' id='36' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
          <zone h='97916' id='34' type='layout-basic' w='87115' x='586' y='1042'>
            <zone h='97916' id='42' name='log trend for confirmed cases' show-title='false' w='87115' x='586' y='1042'>
              <layout-cache minwidth='178' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone fixed-size='160' h='97916' id='35' is-fixed='true' param='vert' type='layout-flow' w='11713' x='87701' y='1042'>
            <zone h='15069' id='38' name='Death vs Cured Comparison' synchronized='1' type='currpage' w='11713' x='87701' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='8904' id='43' name='log trend for confirmed cases' pane-specification-id='5' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' type='color' w='11713' x='87701' y='16111'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
        </zone>
        <zone h='100000' id='3' param='vert' type='layout-flow' w='100000' x='73' y='130'>
          <zone h='4658' id='6' param='horz' type='layout-flow' w='100000' x='73' y='130'>
            <zone forceUpdate='true' h='4658' id='7' type='text' w='100000' x='73' y='130'>
              <formatted-text>
                <run fontcolor='#000000' fontsize='18'>Covid-19 Analysis for India</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='0' />
                <format attr='background-color' value='#f5eddc' />
              </zone-style>
            </zone>
          </zone>
          <zone h='91369' id='8' param='horz' type='layout-flow' w='100000' x='73' y='4788'>
            <zone fixed-size='435' h='91369' id='12' is-fixed='true' param='vert' type='layout-flow' w='32431' x='73' y='4788'>
              <zone h='90273' id='9' name='Covid-19 India MAP' show-title='false' w='31845' x='366' y='5336'>
                <layout-cache minheight='200' minwidth='200' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='420' h='91369' id='13' is-fixed='true' param='vert' type='layout-flow' w='30747' x='32504' y='4788'>
              <zone h='7808' id='28' name='Total Confirmed Cases' show-title='false' w='30747' x='32504' y='4788'>
                <layout-cache fixed-size-h='57' fixed-size-w='419' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#f5eddc' />
                </zone-style>
              </zone>
              <zone h='50274' id='53' name='Top 10' show-title='false' w='30747' x='32504' y='12596'>
                <layout-cache fixed-size-h='359' minwidth='260' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='32' h='4384' id='39' is-fixed='true' param='vert' type='layout-flow' w='30747' x='32504' y='62870'>
                <zone forceUpdate='true' h='3562' id='40' type='text' w='30747' x='32504' y='62870'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='10'>Top 10 States</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='24519' id='30' name='No. of Confirmed Cases line' show-title='false' w='30747' x='32504' y='67254'>
                <layout-cache minheight='124' minwidth='160' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='4384' id='49' is-fixed='true' type='text' w='30747' x='32504' y='91773'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='10'>Trend for Confirmed Cases</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='463' h='91369' id='21' is-fixed='true' param='vert' type='layout-flow' w='34481' x='63251' y='4788'>
              <zone h='7808' id='29' name='Total No. of Deaths' show-title='false' w='33895' x='63544' y='5336'>
                <layout-cache fixed-size-h='57' fixed-size-w='433' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
              <zone h='32602' id='22' name='State Statistics' show-title='false' w='33895' x='63544' y='13144'>
                <layout-cache cell-count-w='3' minheight='141' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
              <zone fixed-size='338' h='46301' id='25' is-fixed='true' name='Death vs Cured Comparison' show-title='false' w='33895' x='63544' y='45746'>
                <layout-cache minheight='201' minwidth='160' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='3562' id='48' type='text' w='33895' x='63544' y='92047'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='10'>Weekly Comparison (Deaths vs Cured)</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#f5eddc' />
            </zone-style>
          </zone>
          <zone fixed-size='21' forceUpdate='true' h='3973' id='52' is-fixed='true' type='text' w='100000' x='73' y='96157'>
            <formatted-text>
              <run bold='true' fontalignment='2' fontcolor='#000000' fontsize='10'>By Rishik Sharama</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#f5eddc' />
            </zone-style>
          </zone>
        </zone>
        <zone h='5990' id='10' name='Covid-19 India MAP' pane-specification-id='0' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' type='color' w='10249' x='17496' y='13411' />
        <zone h='5729' id='32' mode='dropdown' name='State Statistics' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' type='filter' values='database' w='11933' x='85212' y='15104' />
        <zone count='6' dropdown='0' h='3125' id='11' name='Covid-19 India MAP' name1='State Statistics' name2='Total Confirmed Cases' name3='No. of Confirmed Cases line' name4='log trend for confirmed cases' name5='Total No. of Deaths' name6='Top 10' show-title='false' synchronized='1' trailctrls='0' type='currpage' w='22401' x='74744' y='521' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2400' minheight='2400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='57' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97808' id='56' param='vert' type='layout-flow' w='98828' x='586' y='1096'>
                <zone forceUpdate='true' h='4658' id='7' type='text' w='100000' x='73' y='130'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='18'>Covid-19 Analysis for India</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97916' id='42' is-fixed='true' name='log trend for confirmed cases' show-title='false' w='87115' x='586' y='1042'>
                  <layout-cache minwidth='178' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8904' id='43' name='log trend for confirmed cases' pane-specification-id='5' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' type='color' w='11713' x='87701' y='16111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='7808' id='28' is-fixed='true' name='Total Confirmed Cases' show-title='false' w='30747' x='32504' y='4788'>
                  <layout-cache fixed-size-h='57' fixed-size-w='419' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='90273' id='9' is-fixed='true' name='Covid-19 India MAP' show-title='false' w='31845' x='366' y='5336'>
                  <layout-cache minheight='200' minwidth='200' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5990' id='10' name='Covid-19 India MAP' pane-specification-id='0' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' type='color' w='10249' x='17496' y='13411'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='7808' id='29' is-fixed='true' name='Total No. of Deaths' show-title='false' w='33895' x='63544' y='5336'>
                  <layout-cache fixed-size-h='57' fixed-size-w='433' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50274' id='53' is-fixed='true' name='Top 10' show-title='false' w='30747' x='32504' y='12596'>
                  <layout-cache fixed-size-h='359' minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5729' id='32' mode='dropdown' name='State Statistics' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' type='filter' values='database' w='11933' x='85212' y='15104'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='32602' id='22' is-fixed='true' name='State Statistics' show-title='false' w='33895' x='63544' y='13144'>
                  <layout-cache cell-count-w='3' minheight='141' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46301' id='25' is-fixed='true' name='Death vs Cured Comparison' show-title='false' w='33895' x='63544' y='45746'>
                  <layout-cache minheight='201' minwidth='160' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3562' id='40' type='text' w='30747' x='32504' y='62870'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='10'>Top 10 States</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='179' h='24519' id='30' is-fixed='true' name='No. of Confirmed Cases line' show-title='false' w='30747' x='32504' y='67254'>
                  <layout-cache minheight='124' minwidth='160' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='4384' id='49' type='text' w='30747' x='32504' y='91773'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='10'>Trend for Confirmed Cases</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3562' id='48' type='text' w='33895' x='63544' y='92047'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='10'>Weekly Comparison (Deaths vs Cured)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='21' forceUpdate='true' h='3973' id='52' type='text' w='100000' x='73' y='96157'>
                  <formatted-text>
                    <run bold='true' fontalignment='2' fontcolor='#000000' fontsize='10'>By Rishik Sharama</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
                <zone h='15069' id='38' name='Death vs Cured Comparison' synchronized='1' type='currpage' w='11713' x='87701' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='6' dropdown='0' h='3125' id='11' name='Covid-19 India MAP' name1='State Statistics' name2='Total Confirmed Cases' name3='No. of Confirmed Cases line' name4='log trend for confirmed cases' name5='Total No. of Deaths' name6='Top 10' show-title='false' synchronized='1' trailctrls='0' type='currpage' w='22401' x='74744' y='521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2FA851A9-2A5D-46CB-80B7-C0C3EFDBEF56}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='State Stats table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47395BC2-4E0C-492B-AAEC-65D9C0FE2E98}' />
    </window>
    <window class='worksheet' name='Line chart for states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;West Bengal&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DDBB0EB9-5F00-472E-B758-2398DC95FD17}' />
    </window>
    <window class='worksheet' name='Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E770595-1CAA-4D51-82AD-9B0568F11C0C}' />
    </window>
    <window class='worksheet' name='Indian vs Foriegn nationals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:ConfirmedForeignNational:nk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:ConfirmedIndianNational:nk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76585501-1D76-4014-8125-FEFDA2ACAA50}' />
    </window>
    <window class='worksheet' name='sorted confirmed bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-05-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1785FAFF-B5D2-4F02-AFAF-FD297FF34C9F}' />
    </window>
    <window class='worksheet' name='No. of Confirmed Cases line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='5' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-05-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:qk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E44D80B3-30BE-4F77-A0F4-A032848F1785}' />
    </window>
    <window class='worksheet' name='Covid-19 India MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-05-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C58CF60-0A28-46C3-9B7A-D4EBCD7D3AA4}' />
    </window>
    <window class='worksheet' name='State Statistics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-05-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Time:nk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2312A26-DE41-4708-A749-4A2D63B7EC4D}' />
    </window>
    <window class='worksheet' name='Death vs Cured Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[:Measure Names]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{792C5765-65AC-4115-922D-3C571CFE957E}' />
    </window>
    <window class='worksheet' name='log trend for confirmed cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='5' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-05-29#</bucket>
          </multibucket>
        </current-page>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]</axis>
              </node-reference>
              <page-reference>
                <fields>
                  <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-05-29#</bucket>
                </multibucket>
              </page-reference>
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:qk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB0430EC-F5AE-41EE-A605-81C560D757AD}' />
    </window>
    <window class='worksheet' name='Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1p8wenp0c6f75514f32yc040j9l4].[max:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-05-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:ConfirmedIndianNational:nk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:State/UnionTerritory:nk]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F89F63DA-DB3E-4796-9723-2B05439B14B5}' />
    </window>
    <window class='worksheet' name='Total Confirmed Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-05-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[Date (group)]</field>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC33E2AA-1D2D-4D1B-B184-3BC89F67F0FF}' />
    </window>
    <window class='worksheet' name='Total No. of Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-05-29#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C32A248F-669A-4B59-BC44-EA78510764E4}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Covid-19 India MAP'>
          <current-page>
            <multibucket>
              <bucket>#2020-05-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Death vs Cured Comparison'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='No. of Confirmed Cases line'>
          <current-page>
            <multibucket>
              <bucket>#2020-05-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='State Statistics'>
          <current-page>
            <multibucket>
              <bucket>#2020-05-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1p8wenp0c6f75514f32yc040j9l4].[Multiple Values]</axis>
                </node-reference>
                <page-reference>
                  <fields>
                    <field>[federated.1p8wenp0c6f75514f32yc040j9l4].[none:Date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>#2020-05-29#</bucket>
                  </multibucket>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
        <viewpoint name='Top 10'>
          <current-page>
            <multibucket>
              <bucket>#2020-05-28#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Total Confirmed Cases'>
          <current-page>
            <multibucket>
              <bucket>#2020-05-28#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Total No. of Deaths'>
          <current-page>
            <multibucket>
              <bucket>#2020-05-28#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='log trend for confirmed cases'>
          <current-page>
            <multibucket>
              <bucket>#2020-05-28#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='53' />
      <simple-id uuid='{20572DD4-9A2B-4255-8D29-6AC7FF4B01E9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid-19 India MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death vs Cured Comparison' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indian vs Foriegn nationals' width='192'>
      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
      Xv38K9fn+/wfdhh0OLcCN+YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Line chart for states' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='No. of Confirmed Cases line' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State Statistics' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State Stats table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='61' name='Total Confirmed Cases' width='192'>
      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
      FaYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='61' name='Total No. of Deaths' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA9CAYAAAD70GbAAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABu0lEQVR4nO3bOy8EURyG8ZdIzE5csxRCpSAkREkjlOI7aCkURKPYEKInIhIKEZUvIEqi
      sUFBSUK1rIR1K3ZHY9TjEuVG3udX/s8U0zyZyTkzFXEcxwJMVZb7BoByIgBYIwBYq/o6KD5d
      l+M+gLLgCQBrBABrBABrBABrBABrBABrBABrBABrBABrBABr3z6FAP6b+aVlHRxlf10fHuzX
      Qmb6x7WKr/8D8C0Q/rOHx4Lmlla0mJlSc1P6z+t5AsDGRxzr5OxCq+vbyt3mVVdbQwDwcXh0
      rM2tXc3OTKi3p0t3d/cEAA9R9K69/QNNjo+pr7dbktTW2sIuEDy8vL6pFEXq7GhPzAkAFgqF
      Z6VSgcIwlZgTACyk040qlSIVi6XEnABgoaG+Tqkg0OXVTWJOALAQBNUaHRnW2saOsqfn+ohj
      5W7z7ALBx9DggMIwTJwDcBIMa7wCwRoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwNonHqJczNXzbEEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='log trend for confirmed cases' width='192'>
      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
      gBhr/x/md9U3LG2bEQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='sorted confirmed bar' width='192'>
      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
      09/fryhQcPPmTZxOJ8vLyzzxxBO8+eabfPOb38y1p1Ip/u3f/g2j0Uh7ezszMzN897vfzTNH
      t+Ixra2tDAwM5L6zB+WxVIA1X5T/9QfvFGx77f/4BhpB4Hz/HOlMFsgftQ+1VlFi2zQzRFG8
      7+Q3g8HA2bNn6e3tzSvjuDViy7LMysoKZrM5r8bp/Pw8+/fvp7i4mP7+/oL3XV1dZXFxkUQi
      oTAfFhYWuHz5MgMDA5w7d47f//3fz2vXaDS8/PLLwGZsZHvquCAIdHZ20tfXx8zMDGVlZYqc
      qOeeey63cLXb7VRW5h+m2NTUxHvvvYfT6cThcCj2ZYiimHMihMNhxeguSRLDw8N873vfQ6vV
      8ld/9Vc5t/GD8lgqwP3wd2/cIBxLKf7+Z989TYnNxP/1o0tcGV5StH/jdAfffHovAH6/n5GR
      ETQaDe+++y7f/va3cTqduWtlWSYSiSDLMrdu3VJ4gLbKw2y5Zb/zne8ofvSTJ0/S09NDMpmk
      t7dXoQBut5vS0lIEQaC5uTmvdhJsRsT/9m//lrq6OiRJYmBgIG+mymaznDt3jm9/+9vo9Xr+
      5m/+hu7u7jw5PvzwQ7xeL3Nzc+j1el555ZW8/dl+v58nnniClZUVXnvtNU6cOJEng1ar5eWX
      X6aoqIi5uTkOHz6sSEx84YUX+NGPfoQsywpTFDZNuS038S9+8Qu+9rWv5SlqJBJhenqaRCJB
      Y2MjTqcTQRBUBfhVyWZlMlmlJ0KS8tcSIyMj1NXVYTKZsNlsedN2Op3mL/7iL+jq6uLSpUto
      tVoOHz6c9/k7O8L8/Dwej4djx47l/i4IAiaTCZPJhM/n4/Llyzz77LO5DqLT6Xjuuedyps32
      0VWn09Hd3Z0rGmaxWBQm0L59+/jZz36Wy5/a3vlCoRA2m42KigpaWlpYXV3NmwVWVlYwGAwM
      Dw/z4osvcvbsWZqbm3PtyWSSn//855hMJvbs2cOZM2f4zne+kyfryMgILpcLvV7P2NgYBw4c
      yJNzy/yzWq1MTU3lzWJbDo3a2lpGR0e5cuUK3/ve9zZT3RW/oMpDw+Fw8Lu/+7vcuHEDm82W
      Z7vDZrDoD/7gDzh//jxarVaRki3LMpcuXSIYDGIymfD7/XzlK1/J++Gnpqa4ceMGLpcLr9fL
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
